const fs = require('fs')
const path = require('path')

main()

function main() {
    const args = process.argv.slice(2)
    if (!args.length) {
        console.error('At least one input file must be specified.')
        return
    }
    for (const arg of args) {
        const filename = path.resolve(process.cwd(), arg)
        const basenameWithoutExt = path.basename(filename).replace(path.extname(filename), '')
        const varName = basenameWithoutExt.toUpperCase()
        const bmp = fs.readFileSync(filename)
        const dataOffset = bmp.readUInt32LE(10)
        const width = bmp.readInt32LE(18)
        const height = bmp.readInt32LE(22)
        const pixels = bmp.slice(dataOffset, dataOffset + width * height)
        /*
        const pixelsHex = Array.from(pixels)
            .reverse()
            .join(',')
        */

        const pxs = Array.from(pixels)
        const rows = []
        for (let i = 0; i < height; i++) {
            rows.push(pxs.slice(i * width, i * width + width).reverse())
        }
        const pixelsHex = rows
            .reduce((p, c) => p.concat(c))
            .reverse()
            .join(',')

        const generated =
            '# Autogenerated by img2s. DO NOT MODIFY!\n' +
            '.section .game.data\n' +
            `.global ${varName}_LEN\n` +
            `${varName}_LEN: .quad ${pixels.byteLength}\n` +
            `.global ${varName}_WIDTH\n` +
            `${varName}_WIDTH: .quad ${width}\n` +
            `.global ${varName}_HEIGHT\n` +
            `${varName}_HEIGHT: .quad ${height}\n` +
            `.global ${varName}\n` +
            `.type ${varName}, @object\n` +
            `${varName}: .byte ${pixelsHex}\n`
        const outPath = path.resolve(path.dirname(filename), `${basenameWithoutExt}.s`)
        fs.writeFileSync(outPath, generated)
    }
}
